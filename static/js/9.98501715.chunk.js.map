{"version":3,"sources":["services/firebase.js","Components/Header/photos/Karifgram.png","Components/Header/Header.styles.js","Components/Header/index.js","Components/ProfilePage/ProfileHeader/ProfileHeader.styles.js","Components/ProfilePage/ProfileHeader/index.js","Components/ProfilePage/Content/Content.styles.js","Components/ProfilePage/Content/index.js","Components/ProfilePage/Profile.styles.js","Components/ProfilePage/index.js","hooks/use-posts.js"],"names":["doesUserNameExist","username","a","firebase","firestore","collection","where","get","result","docs","map","user","data","length","getUserByUserId","userId","item","docId","id","getUserByUsername","getSuggestions","following","limit","results","filter","profile","includes","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","doc","update","FieldValue","arrayRemove","arrayUnion","updateFollowedUserFollowers","profileDocId","followers","getPhotos","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","photosWithUserDetails","getPostsByUserId","getPhotoByPhotoId","photoId","getProfilePictureByName","displayName","console","log","profilePic","getLikedPhoto","getUserWithDocId","Wrapper","styled","div","MiniLogo","img","MiniPic","Navbar","Button","button","Header","useContext","FirebaseContext","UserContext","useState","setProfilePic","useEffect","uid","getUserPic","to","ROUTES","src","Logo","alt","style","textDecoration","onClick","auth","signOut","onKeyDown","event","key","height","width","circle","Info","Details","Title","Description","ProfileHeader","photos","followed","setFollowed","loggedInUser","updatedUser","setUpdatedUser","followerCount","setFollowerCount","isSameUser","setIsSameUser","updateFollwers","updateUser","margin","description","text","i","Menu","Posts","Post","Content","imageSrc","count","ProfilePage","setPhotos","setUser","currentUser","getUser","usePosts","useParams","document","title","fullName"],"mappings":"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","file":"static/js/9.98501715.chunk.js","sourcesContent":["import { firebase, FieldValue } from \"../Lib/firebase\";\n\nexport async function doesUserNameExist(username) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"username\", \"==\", username)\n    .get();\n\n  return result.docs.map((user) => user.data().length > 0);\n}\n\nexport async function getUserByUserId(userId) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"userId\", \"==\", userId)\n    .get();\n  const user = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n  return user;\n}\nexport async function getUserByUsername(username) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"username\", \"==\", username)\n    .get();\n  const user = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n  return user;\n}\n\nexport async function getSuggestions(userId, following) {\n  const results = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"userId\", \"!=\", userId)\n    .limit(10)\n    .get();\n\n  return results.docs\n    .map((user) => ({ ...user.data(), docId: user.id }))\n    .filter((profile) => profile.userId && !following.includes(profile.userId));\n}\n\nexport async function updateLoggedInUserFollowing(\n  loggedInUserDocId,\n  profileId,\n  isFollowingProfile\n) {\n  return firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(loggedInUserDocId)\n    .update({\n      following: isFollowingProfile\n        ? FieldValue.arrayRemove(profileId)\n        : FieldValue.arrayUnion(profileId),\n    });\n}\nexport async function updateFollowedUserFollowers(\n  profileDocId,\n  loggedInUserDocId,\n  isFollowingProfile\n) {\n  return firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(profileDocId)\n    .update({\n      followers: isFollowingProfile\n        ? FieldValue.arrayRemove(loggedInUserDocId)\n        : FieldValue.arrayUnion(loggedInUserDocId),\n    });\n}\n\nexport async function getPhotos(userId, following) {\n  const result = await firebase\n    .firestore()\n    .collection(\"photos\")\n    .where(\"userId\", \"in\", following)\n    .get();\n  const userFollowedPhotos = result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id,\n  }));\n  const photosWithUserDetails = await Promise.all(\n    userFollowedPhotos.map(async (photo) => {\n      let userLikedPhoto = false;\n      if (photo.likes.includes(userId)) {\n        userLikedPhoto = true;\n      }\n      const user = await getUserByUserId(photo.userId);\n      const { username } = user[0];\n      return { username, ...photo, userLikedPhoto };\n    })\n  );\n  return photosWithUserDetails;\n}\n\nexport async function getPostsByUserId(userId) {\n  const result = await firebase\n    .firestore()\n    .collection(\"photos\")\n    .where(\"userId\", \"==\", userId)\n    .get();\n\n  return result.docs.map((photo) => photo.data());\n}\n\nexport async function getPhotoByPhotoId(photoId) {\n  const result = await firebase\n    .firestore()\n    .collection(\"photos\")\n    .where(\"photoId\", \"==\", photoId)\n    .get();\n\n  return result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id,\n  }));\n}\n\nexport async function getProfilePictureByName(displayName) {\n  const [result] = await getUserByUsername(displayName);\n  console.log(\"result\", result);\n\n  return result?.profilePic;\n}\n\nexport function getLikedPhoto(photo, userId) {\n  let userLikedPhoto = false;\n  if (photo.likes.includes(userId)) {\n    userLikedPhoto = true;\n  }\n  const newPhoto = { ...photo, userLikedPhoto: userLikedPhoto };\n\n  return newPhoto;\n}\n\nexport async function getUserWithDocId(userId) {\n  const result = await firebase\n    .firestore()\n    .collection(\"users\")\n    .where(\"userId\", \"==\", userId)\n    .get();\n\n  const [user] = result.docs.map((user) => ({\n    ...user.data(),\n    docId: user.id,\n  }));\n\n  return user;\n}\n","export default __webpack_public_path__ + \"static/media/Karifgram.33790cf2.png\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background-color: white;\n  display: flex;\n  justify-content: space-between;\n  min-height: 3rem;\n  align-items: center;\n  a {\n    display: flex;\n  }\n`;\nexport const MiniLogo = styled.img`\n  height: 2rem;\n  margin-left: 1rem;\n  margin-top: 0.5rem;\n`;\n\nexport const MiniPic = styled.img`\n  height: 2.25rem;\n  border-radius: 100%;\n  margin-right: 0.5rem;\n  :hover {\n    opacity: 80%;\n  }\n`;\n\nexport const Navbar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const Button = styled.button`\n  background-color: var(--blueColor);\n  color: var(--bgColor);\n  border: none;\n  border-radius: 4px;\n  font: inherit;\n  font-weight: 500;\n  padding: 0.5rem 1rem;\n  margin-right: 1rem;\n  cursor: pointer;\n  text-decoration: none;\n`;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Wrapper, Navbar, MiniPic, MiniLogo, Button } from \"./Header.styles\";\nimport Logo from \"./photos/Karifgram.png\";\nimport { Link } from \"react-router-dom\";\nimport FirebaseContext from \"../../Context/firebase\";\nimport UserContext from \"../../Context/user\";\nimport * as ROUTES from \"../../constants/routes\";\nimport { getUserByUserId } from \"../../services/firebase\";\nimport Skeleton from \"react-loading-skeleton\";\nexport const Header = () => {\n  const { firebase } = useContext(FirebaseContext);\n  const { user } = useContext(UserContext);\n  const [profilePic, setProfilePic] = useState();\n\n  useEffect(() => {\n    async function getUserPic() {\n      const result = await getUserByUserId(user.uid);\n\n      setProfilePic(result[0].profilePic);\n    }\n    if (user?.uid) {\n      getUserPic();\n    }\n  }, [user]);\n\n  return (\n    <Wrapper>\n      <Link to={ROUTES.DASHBOARD}>\n        <MiniLogo src={Logo} alt=\"\" />\n      </Link>\n\n      <Navbar>\n        {user ? (\n          <>\n            <Link to={ROUTES.DASHBOARD} style={{ textDecoration: \"none\" }}>\n              <Button\n                onClick={() => {\n                  firebase.auth().signOut();\n                }}\n                onKeyDown={(event) => {\n                  if (event.key === \"Enter\") {\n                    firebase.auth().signOut();\n                  }\n                }}\n              >\n                Sign Out\n              </Button>\n            </Link>\n            <Link to={`/p/${user.displayName}`}>\n              {profilePic ? (\n                <MiniPic src={profilePic}></MiniPic>\n              ) : (\n                <Skeleton height={36} width={36} circle={true} />\n              )}\n            </Link>\n          </>\n        ) : (\n          <>\n            <Link to={ROUTES.LOGIN}>\n              <Button>Login</Button>\n            </Link>\n            <Link to={ROUTES.SIGNUP}>\n              <Button\n                onClick={() => {\n                  firebase.auth().signOut();\n                }}\n                onKeyDown={(event) => {\n                  if (event.key === \"Enter\") {\n                    firebase.auth().signOut();\n                  }\n                }}\n              >\n                Sign Up\n              </Button>\n            </Link>\n          </>\n        )}\n      </Navbar>\n    </Wrapper>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  border-bottom: 1.5px solid var(--lightColor);\n  padding-block: 2rem;\n  margin: 0 auto;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    img {\n      max-width: 148px;\n      width: 100%;\n      border-radius: 100%;\n      aspect-ratio: 1/1;\n    }\n  }\n`;\nexport const Info = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n  padding-left: 2rem;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  font-weight: 300;\n  & > * {\n    padding: 0.5rem 0;\n  }\n  div {\n    display: flex;\n    flex-direction: column;\n    margin-right: 1rem;\n\n    span {\n      font-weight: 400;\n      text-align: center;\n    }\n  }\n`;\nexport const Title = styled.div`\n  font-size: 1.5rem;\n  font-weight: 300;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-weight: 300;\n  h1 {\n    font-weight: 400;\n    margin-bottom: 0.65rem;\n    font-size: 1rem;\n    margin-top: 0;\n  }\n  p {\n    margin: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background: var(--blueColor);\n  border-radius: 3px;\n  padding: 0.2rem 1rem;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n`;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport UserContext from \"../../../Context/user\";\nimport {\n  updateLoggedInUserFollowing,\n  updateFollowedUserFollowers,\n  getUserByUserId,\n} from \"../../../services/firebase\";\nimport {\n  Wrapper,\n  Info,\n  Title,\n  Details,\n  Description,\n  Button,\n} from \"./ProfileHeader.styles\";\nimport PropTypes from \"prop-types\";\nimport { getUserWithDocId } from \"../../../services/firebase\";\n\nconst ProfileHeader = ({ user, photos }) => {\n  const [followed, setFollowed] = useState(``);\n  const { user: loggedInUser } = useContext(UserContext);\n  const [updatedUser, setUpdatedUser] = useState(null);\n  const [followerCount, setFollowerCount] = useState(null);\n  const [isSameUser, setIsSameUser] = useState(true);\n\n  async function handleFollowUser() {\n    setFollowed((followed) => !followed);\n\n    await updateLoggedInUserFollowing(updatedUser.docId, user.userId, followed);\n    await updateFollowedUserFollowers(user.docId, loggedInUser.uid, followed);\n    updateFollwers();\n  }\n  async function updateFollwers() {\n    const [result] = await getUserByUserId(user.userId);\n    setFollowerCount(result.followers.length);\n  }\n  useEffect(() => {\n    async function updateUser() {\n      user.userId === loggedInUser.uid\n        ? setIsSameUser(true)\n        : setIsSameUser(false);\n\n      const result = await getUserWithDocId(loggedInUser.uid);\n      setUpdatedUser(result);\n      if (user.followers) {\n        setFollowerCount(user.followers.length);\n        setFollowed(user.followers.includes(loggedInUser.uid) ? true : false);\n      } else {\n        setFollowerCount(0);\n      }\n    }\n    if (user && loggedInUser) {\n      updateUser();\n    }\n  }, [loggedInUser, user]);\n\n  return (\n    <Wrapper id={\"Header\"}>\n      <div>\n        {user?.profilePic ? (\n          <img src={user.profilePic} alt=\"profile pic\" />\n        ) : (\n          <Skeleton\n            width={148}\n            height={148}\n            circle={true}\n            style={{ margin: \"2rem 3rem\" }}\n          />\n        )}\n      </div>\n      <Info>\n        <Title>\n          {user ? `${user.username}` : <Skeleton />}{\" \"}\n          {isSameUser ? null : (\n            <Button onClick={handleFollowUser}>\n              {followed ? \"Unfollow\" : \"Follow\"}\n            </Button>\n          )}\n        </Title>\n        <Details>\n          <div>\n            <span>{photos ? `${photos.length}` : <Skeleton width={10} />}</span>{\" \"}\n            posts\n          </div>\n          <div>\n            <span>{user ? `${followerCount}` : <Skeleton width={10} />}</span>{\" \"}\n            followers\n          </div>\n          <div>\n            <span>\n              {user ? `${user.following.length}` : <Skeleton width={10} />}\n            </span>{\" \"}\n            following\n          </div>\n        </Details>\n        <Description>\n          {user?.description\n            ? user.description.map((text, i) => {\n                return i === 0 ? (\n                  <h1 key={i}>{text}</h1>\n                ) : (\n                  <p key={i}>{text}</p>\n                );\n              })\n            : null}\n        </Description>\n      </Info>\n    </Wrapper>\n  );\n};\n\nexport default ProfileHeader;\n\nProfileHeader.propTypes = {\n  user: PropTypes.object,\n  photos: PropTypes.array,\n};\n","import styled from \"styled-components\";\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Menu = styled.div`\n  font-weight: 500;\n  font-size: 0.8rem;\n  color: var(--darkColor);\n  border-top: 2px solid var(--darkColor);\n  padding: 0 1rem;\n  padding-top: 0.5rem;\n`;\n\nexport const Posts = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  padding: 0;\n`;\n\nexport const Post = styled.div`\n  display: flex;\n  padding-bottom: 0.5rem;\n  justify-content: center;\n  padding: 1rem 0rem;\n  margin-inline: 1em;\n  flex: 0 0 33.333333%;\n  position: relative;\n  /* ::before {\n    content: \"x\";\n    position: absolute;\n    bottom: 50%;\n  } */\n\n  img {\n    cursor: pointer;\n    width: 256px;\n\n    :hover {\n      opacity: 70%;\n    }\n  }\n`;\n","import { Wrapper, Menu, Posts, Post } from \"./Content.styles\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport Skeleton from \"react-loading-skeleton\";\n\nconst Content = ({ photos }) => {\n  return (\n    <>\n      <Wrapper>\n        <Menu id={\"Menu\"}>\n          <div>POSTS</div>\n        </Menu>\n        <Posts id={\"Posts\"}>\n          {photos ? (\n            photos.map((photo) => {\n              return (\n                <Post key={`${photo.photoId}`}>\n                  <Link to={`/post/${photo.photoId}`}>\n                    <img src={photo.imageSrc} alt={photo.photoId}></img>\n                  </Link>\n                </Post>\n              );\n            })\n          ) : (\n            <Skeleton\n              count={3}\n              width={202}\n              height={202}\n              style={{ margin: \"1rem\" }}\n            />\n          )}\n        </Posts>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Content;\n\nContent.propTypes = {\n  photos: PropTypes.array,\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background-color: var(--bgColor);\n  max-width: 1080px;\n  width: 90%;\n  margin: auto;\n`;\n","import React, { useEffect } from \"react\";\nimport { Redirect, useParams } from \"react-router\";\n//Components\nimport ProfileHeader from \"./ProfileHeader\";\nimport Content from \"./Content\";\n//Styled Components\nimport { Wrapper } from \"./Profile.styles\";\n//Data\n\nimport usePosts from \"../../hooks/use-posts\";\nimport Header from \"../Header\";\n\nconst ProfilePage = () => {\n  const { username } = useParams();\n  const { photos, user } = usePosts(username);\n  useEffect(() => {\n    if (user) {\n      document.title = `${user.fullName} (@${user.username})`;\n    }\n  });\n  return (\n    <>\n      {user !== null ? (\n        <>\n          <Header />\n          <Wrapper id={\"Profile\"}>\n            <ProfileHeader user={user} photos={photos} />\n            <Content photos={photos} />\n          </Wrapper>\n        </>\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n    </>\n  );\n};\n\nexport default ProfilePage;\n","import { useState, useEffect } from \"react\";\nimport { getUserByUsername, getPostsByUserId } from \"../services/firebase\";\n//\n\nexport default function usePosts(username) {\n  const [photos, setPhotos] = useState();\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    async function getUser() {\n      const result = await getUserByUsername(username);\n      if (result.length >> 0) {\n        setUser(result[0]);\n        getPhotos(result[0]);\n      } else {\n        setUser(null);\n      }\n    }\n    async function getPhotos(currentUser) {\n      const result = await getPostsByUserId(currentUser.userId);\n      setPhotos(result);\n    }\n\n    getUser();\n  }, [username]);\n  console.log(user);\n  return { photos, user };\n}\n"],"sourceRoot":""}