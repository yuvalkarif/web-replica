{"version":3,"sources":["constants/routes.js","Context/firebase.js","Lib/firebase.js","Context/user.js","helpers/protected.routes.js","helpers/is-user-logged-in.js","App.js","hooks/use-auth-listener.js","index.js"],"names":["LOGIN","DASHBOARD","SIGNUP","PROFILE","POST","NOT_FOUND","FirebaseContext","createContext","firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FieldValue","firestore","UserContext","ProtectedRoute","user","children","rest","render","location","to","pathname","ROUTES","state","from","IsUserLoggedIn","loggedInPath","Login","lazy","SignUp","NotFound","Dashboard","Profile","Post","App","useState","JSON","parse","localStorage","getItem","setUser","useContext","useEffect","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","Provider","value","fallback","path","exact","component","ReactDOM","document","getElementById"],"mappings":"iHAAA,4MAAO,IAAMA,EAAQ,qBACRC,EAAY,gBACZC,EAAS,sBACTC,EAAU,2BACVC,EAAO,6BACPC,EAAY,0B,gCCLzB,WAEMC,EAAkBC,wBAAc,MAEvBD,O,gCCJf,gFAeME,GAfN,YAeiBC,IAASC,cAVJ,CACpBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAITC,EAAeT,IAASU,UAAxBD,Y,gCChBR,WAEME,EAAcb,wBAAc,MAEnBa,O,gMCCA,SAASC,EAAT,GAAsD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SAAaC,EAAQ,iBAClE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAIJ,EACKC,EAEJD,EAOE,KALH,cAAC,IAAD,CACEK,GAAI,CAAEC,SAAUC,IAAcC,MAAO,CAAEC,KAAML,U,yCCX5C,SAASM,EAAT,GAKX,IAJFV,EAIC,EAJDA,KACAC,EAGC,EAHDA,SACAU,EAEC,EAFDA,aACGT,EACF,iBACD,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAKJ,EAGDA,EAEA,cAAC,IAAD,CACEK,GAAI,CAAEC,SAAUK,EAAcH,MAAO,CAAEC,KAAML,MAI5C,KATEH,MCFjB,IAAMW,EAAQC,gBAAK,kBAAM,uDACnBC,EAASD,gBAAK,kBAAM,uDACpBE,EAAWF,gBAAK,kBAAM,6DACtBG,EAAYH,gBAAK,kBAAM,oEACvBI,EAAUJ,gBAAK,kBAAM,6DACrBK,EAAOL,gBAAK,kBAAM,oEA2CTM,MAzCf,WACE,IAAQnB,ECnBK,WACb,MAAwBoB,mBACtBC,KAAKC,MAAMC,aAAaC,QAAQ,cADlC,mBAAOxB,EAAP,KAAayB,EAAb,KAGQvC,EAAawC,qBAAW1C,KAAxBE,SAaR,OAZAyC,qBAAU,WACR,IAAMC,EAAW1C,EAAS2C,OAAOC,oBAAmB,SAACC,GAQnD,OAPIA,GACFR,aAAaS,QAAQ,WAAYX,KAAKY,UAAUF,IAChDN,EAAQM,KAERR,aAAaW,WAAW,YACxBT,EAAQ,OAEH,kBAAMG,UAEd,CAAC1C,IACG,CAAEc,QDEQmC,GAATnC,KACR,OACE,cAAC,IAAYoC,SAAb,CAAsBC,MAAO,CAAErC,QAA/B,SACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUsC,SAAU,wCAApB,SACE,eAAC,IAAD,WACE,cAAC5B,EAAD,CACEV,KAAMA,EACNW,aAAcJ,IACdgC,KAAMhC,IAHR,SAKE,cAACK,EAAD,MAEF,cAACF,EAAD,CACEV,KAAMA,EACNW,aAAcJ,IACdgC,KAAMhC,IAHR,SAKE,cAACO,EAAD,MAGF,cAACf,EAAD,CAAgBC,KAAMA,EAAMuC,KAAMhC,IAAkBiC,OAAK,EAAzD,SACE,cAACxB,EAAD,MAGF,cAACjB,EAAD,CAAgBC,KAAMA,EAAMuC,KAAMhC,IAAgBiC,OAAK,EAAvD,SACE,cAACvB,EAAD,MAEF,cAAClB,EAAD,CAAgBC,KAAMA,EAAMuC,KAAMhC,IAAaiC,OAAK,EAApD,SACE,cAACtB,EAAD,MAGF,cAAC,IAAD,CAAOqB,KAAMhC,IAAkBkC,UAAW1B,c,QE/CtD2B,IAASvC,OACP,cAAC,IAAgBiC,SAAjB,CAA0BC,MAAO,CAAEnD,aAAUU,gBAA7C,SACE,cAAC,EAAD,MAEF+C,SAASC,eAAe,W","file":"static/js/main.09687276.chunk.js","sourcesContent":["export const LOGIN = \"/web-replica/login\";\nexport const DASHBOARD = \"/web-replica/\";\nexport const SIGNUP = \"/web-replica/signup\";\nexport const PROFILE = \"/web-replica/p/:username\";\nexport const POST = \"/web-replica/post/:photoId\";\nexport const NOT_FOUND = \"/web-replica/not-found\";\n","import { createContext } from \"react\";\n\nconst FirebaseContext = createContext(null);\n\nexport default FirebaseContext;\n","import Firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Firebase Config\nexport const config = {\n  apiKey: \"AIzaSyAyRueBmBSzQJAOCKntgcTLD-w_XyEH-Uc\",\n  authDomain: \"web-replica-503d1.firebaseapp.com\",\n  projectId: \"web-replica-503d1\",\n  storageBucket: \"web-replica-503d1.appspot.com\",\n  messagingSenderId: \"307870946837\",\n  appId: \"1:307870946837:web:5d3eff143ae26a7ee0a01c\",\n  measurementId: \"G-HQW8WDFDH7\",\n};\n\nconst firebase = Firebase.initializeApp(config);\nconst { FieldValue } = Firebase.firestore;\n\nexport { firebase, FieldValue };\n","import { createContext } from \"react\";\n\nconst UserContext = createContext(null);\n\nexport default UserContext;\n","import PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router\";\n\nimport * as ROUTES from \"../constants/routes\";\n\nexport default function ProtectedRoute({ user, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (user) {\n          return children;\n        }\n        if (!user) {\n          return (\n            <Redirect\n              to={{ pathname: ROUTES.LOGIN, state: { from: location } }}\n            />\n          );\n        }\n        return null;\n      }}\n    />\n  );\n}\n\nProtectedRoute.propTypes = {\n  user: PropTypes.object,\n  children: PropTypes.object.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router\";\n\n// import * as ROUTES from \"../constants/routes\";\n\nexport default function IsUserLoggedIn({\n  user,\n  children,\n  loggedInPath,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (!user) {\n          return children;\n        }\n        if (user) {\n          return (\n            <Redirect\n              to={{ pathname: loggedInPath, state: { from: location } }}\n            />\n          );\n        }\n        return null;\n      }}\n    />\n  );\n}\n\nIsUserLoggedIn.propTypes = {\n  user: PropTypes.object,\n  children: PropTypes.object.isRequired,\n  loggedInPath: PropTypes.string.isRequired,\n};\n","import React, { Suspense } from \"react\";\nimport { lazy } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//Root CSS\nimport \"./App.css\";\n//Consts\nimport * as ROUTES from \"./constants/routes\";\nimport useAuthListener from \"./hooks/use-auth-listener\";\nimport UserContext from \"./Context/user\";\n\nimport ProtectedRoute from \"./helpers/protected.routes\";\nimport IsUserLoggedIn from \"./helpers/is-user-logged-in\";\n//Components\nconst Login = lazy(() => import(\"./Components/LoginPage\"));\nconst SignUp = lazy(() => import(\"./Components/SignUpPage\"));\nconst NotFound = lazy(() => import(\"./Components/NotFoundPage\"));\nconst Dashboard = lazy(() => import(\"./Components/DashboardPage\"));\nconst Profile = lazy(() => import(\"./Components/ProfilePage\"));\nconst Post = lazy(() => import(\"./Components/Post\"));\n\nfunction App() {\n  const { user } = useAuthListener();\n  return (\n    <UserContext.Provider value={{ user }}>\n      <Router>\n        <Suspense fallback={<p>Loading</p>}>\n          <Switch>\n            <IsUserLoggedIn\n              user={user}\n              loggedInPath={ROUTES.DASHBOARD}\n              path={ROUTES.LOGIN}\n            >\n              <Login />\n            </IsUserLoggedIn>\n            <IsUserLoggedIn\n              user={user}\n              loggedInPath={ROUTES.DASHBOARD}\n              path={ROUTES.SIGNUP}\n            >\n              <SignUp />\n            </IsUserLoggedIn>\n\n            <ProtectedRoute user={user} path={ROUTES.DASHBOARD} exact>\n              <Dashboard />\n            </ProtectedRoute>\n\n            <ProtectedRoute user={user} path={ROUTES.PROFILE} exact>\n              <Profile />\n            </ProtectedRoute>\n            <ProtectedRoute user={user} path={ROUTES.POST} exact>\n              <Post />\n            </ProtectedRoute>\n\n            <Route path={ROUTES.NOT_FOUND} component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import { useState, useEffect, useContext } from \"react\";\nimport FirebaseContext from \"../Context/firebase\";\n\nexport default function useAuthListener() {\n  const [user, setUser] = useState(\n    JSON.parse(localStorage.getItem(\"authUser\"))\n  );\n  const { firebase } = useContext(FirebaseContext);\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\n      if (authUser) {\n        localStorage.setItem(\"authUser\", JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        localStorage.removeItem(\"authUser\");\n        setUser(null);\n      }\n      return () => listener();\n    });\n  }, [firebase]);\n  return { user };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport FirebaseContext from \"./Context/firebase\";\nimport { firebase, FieldValue } from \"./Lib/firebase\";\n// import { updateDatabasePhoto } from \"./seed\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}